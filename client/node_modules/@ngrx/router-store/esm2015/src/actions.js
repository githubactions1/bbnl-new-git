/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/** *
 * An action dispatched when a router navigation request is fired.
  @type {?} */
export const ROUTER_REQUEST = '@ngrx/router-store/request';
/** @typedef {?} */
var RouterRequestPayload;
export { RouterRequestPayload };
/** @typedef {?} */
var RouterRequestAction;
export { RouterRequestAction };
/** *
 * An action dispatched when the router navigates.
  @type {?} */
export const ROUTER_NAVIGATION = '@ngrx/router-store/navigation';
/** @typedef {?} */
var RouterNavigationPayload;
export { RouterNavigationPayload };
/** @typedef {?} */
var RouterNavigationAction;
export { RouterNavigationAction };
/** *
 * An action dispatched when the router cancels navigation.
  @type {?} */
export const ROUTER_CANCEL = '@ngrx/router-store/cancel';
/** @typedef {?} */
var RouterCancelPayload;
export { RouterCancelPayload };
/** @typedef {?} */
var RouterCancelAction;
export { RouterCancelAction };
/** *
 * An action dispatched when the router errors.
  @type {?} */
export const ROUTER_ERROR = '@ngrx/router-store/error';
/** @typedef {?} */
var RouterErrorPayload;
export { RouterErrorPayload };
/** @typedef {?} */
var RouterErrorAction;
export { RouterErrorAction };
/** *
 * An action dispatched after navigation has ended and new route is active.
  @type {?} */
export const ROUTER_NAVIGATED = '@ngrx/router-store/navigated';
/** @typedef {?} */
var RouterNavigatedPayload;
export { RouterNavigatedPayload };
/** @typedef {?} */
var RouterNavigatedAction;
export { RouterNavigatedAction };
/** @typedef {?} */
var RouterAction;
export { RouterAction };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvcm91dGVyLXN0b3JlL3NyYy9hY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFnQkEsYUFBYSxjQUFjLEdBQUcsNEJBQTRCLENBQUM7Ozs7Ozs7Ozs7QUFvQjNELGFBQWEsaUJBQWlCLEdBQUcsK0JBQStCLENBQUM7Ozs7Ozs7Ozs7QUF1QmpFLGFBQWEsYUFBYSxHQUFHLDJCQUEyQixDQUFDOzs7Ozs7Ozs7O0FBeUJ6RCxhQUFhLFlBQVksR0FBRywwQkFBMEIsQ0FBQzs7Ozs7Ozs7OztBQXlCdkQsYUFBYSxnQkFBZ0IsR0FBRyw4QkFBOEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE5hdmlnYXRpb25DYW5jZWwsXG4gIE5hdmlnYXRpb25FbmQsXG4gIE5hdmlnYXRpb25FcnJvcixcbiAgTmF2aWdhdGlvblN0YXJ0LFxuICBSb3V0ZXNSZWNvZ25pemVkLFxufSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQge1xuICBCYXNlUm91dGVyU3RvcmVTdGF0ZSxcbiAgU2VyaWFsaXplZFJvdXRlclN0YXRlU25hcHNob3QsXG59IGZyb20gJy4vc2VyaWFsaXplcic7XG5cbi8qKlxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgd2hlbiBhIHJvdXRlciBuYXZpZ2F0aW9uIHJlcXVlc3QgaXMgZmlyZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBST1VURVJfUkVRVUVTVCA9ICdAbmdyeC9yb3V0ZXItc3RvcmUvcmVxdWVzdCc7XG5cbi8qKlxuICogUGF5bG9hZCBvZiBST1VURVJfUkVRVUVTVFxuICovXG5leHBvcnQgdHlwZSBSb3V0ZXJSZXF1ZXN0UGF5bG9hZCA9IHtcbiAgZXZlbnQ6IE5hdmlnYXRpb25TdGFydDtcbn07XG5cbi8qKlxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgd2hlbiBhIHJvdXRlciBuYXZpZ2F0aW9uIHJlcXVlc3QgaXMgZmlyZWQuXG4gKi9cbmV4cG9ydCB0eXBlIFJvdXRlclJlcXVlc3RBY3Rpb24gPSB7XG4gIHR5cGU6IHR5cGVvZiBST1VURVJfUkVRVUVTVDtcbiAgcGF5bG9hZDogUm91dGVyUmVxdWVzdFBheWxvYWQ7XG59O1xuXG4vKipcbiAqIEFuIGFjdGlvbiBkaXNwYXRjaGVkIHdoZW4gdGhlIHJvdXRlciBuYXZpZ2F0ZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBST1VURVJfTkFWSUdBVElPTiA9ICdAbmdyeC9yb3V0ZXItc3RvcmUvbmF2aWdhdGlvbic7XG5cbi8qKlxuICogUGF5bG9hZCBvZiBST1VURVJfTkFWSUdBVElPTi5cbiAqL1xuZXhwb3J0IHR5cGUgUm91dGVyTmF2aWdhdGlvblBheWxvYWQ8VCBleHRlbmRzIEJhc2VSb3V0ZXJTdG9yZVN0YXRlPiA9IHtcbiAgcm91dGVyU3RhdGU6IFQ7XG4gIGV2ZW50OiBSb3V0ZXNSZWNvZ25pemVkO1xufTtcblxuLyoqXG4gKiBBbiBhY3Rpb24gZGlzcGF0Y2hlZCB3aGVuIHRoZSByb3V0ZXIgbmF2aWdhdGVzLlxuICovXG5leHBvcnQgdHlwZSBSb3V0ZXJOYXZpZ2F0aW9uQWN0aW9uPFxuICBUIGV4dGVuZHMgQmFzZVJvdXRlclN0b3JlU3RhdGUgPSBTZXJpYWxpemVkUm91dGVyU3RhdGVTbmFwc2hvdFxuPiA9IHtcbiAgdHlwZTogdHlwZW9mIFJPVVRFUl9OQVZJR0FUSU9OO1xuICBwYXlsb2FkOiBSb3V0ZXJOYXZpZ2F0aW9uUGF5bG9hZDxUPjtcbn07XG5cbi8qKlxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgd2hlbiB0aGUgcm91dGVyIGNhbmNlbHMgbmF2aWdhdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFJPVVRFUl9DQU5DRUwgPSAnQG5ncngvcm91dGVyLXN0b3JlL2NhbmNlbCc7XG5cbi8qKlxuICogUGF5bG9hZCBvZiBST1VURVJfQ0FOQ0VMLlxuICovXG5leHBvcnQgdHlwZSBSb3V0ZXJDYW5jZWxQYXlsb2FkPFQsIFYgZXh0ZW5kcyBCYXNlUm91dGVyU3RvcmVTdGF0ZT4gPSB7XG4gIHJvdXRlclN0YXRlOiBWO1xuICBzdG9yZVN0YXRlOiBUO1xuICBldmVudDogTmF2aWdhdGlvbkNhbmNlbDtcbn07XG5cbi8qKlxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgd2hlbiB0aGUgcm91dGVyIGNhbmNlbHMgbmF2aWdhdGlvbi5cbiAqL1xuZXhwb3J0IHR5cGUgUm91dGVyQ2FuY2VsQWN0aW9uPFxuICBULFxuICBWIGV4dGVuZHMgQmFzZVJvdXRlclN0b3JlU3RhdGUgPSBTZXJpYWxpemVkUm91dGVyU3RhdGVTbmFwc2hvdFxuPiA9IHtcbiAgdHlwZTogdHlwZW9mIFJPVVRFUl9DQU5DRUw7XG4gIHBheWxvYWQ6IFJvdXRlckNhbmNlbFBheWxvYWQ8VCwgVj47XG59O1xuXG4vKipcbiAqIEFuIGFjdGlvbiBkaXNwYXRjaGVkIHdoZW4gdGhlIHJvdXRlciBlcnJvcnMuXG4gKi9cbmV4cG9ydCBjb25zdCBST1VURVJfRVJST1IgPSAnQG5ncngvcm91dGVyLXN0b3JlL2Vycm9yJztcblxuLyoqXG4gKiBQYXlsb2FkIG9mIFJPVVRFUl9FUlJPUi5cbiAqL1xuZXhwb3J0IHR5cGUgUm91dGVyRXJyb3JQYXlsb2FkPFQsIFYgZXh0ZW5kcyBCYXNlUm91dGVyU3RvcmVTdGF0ZT4gPSB7XG4gIHJvdXRlclN0YXRlOiBWO1xuICBzdG9yZVN0YXRlOiBUO1xuICBldmVudDogTmF2aWdhdGlvbkVycm9yO1xufTtcblxuLyoqXG4gKiBBbiBhY3Rpb24gZGlzcGF0Y2hlZCB3aGVuIHRoZSByb3V0ZXIgZXJyb3JzLlxuICovXG5leHBvcnQgdHlwZSBSb3V0ZXJFcnJvckFjdGlvbjxcbiAgVCxcbiAgViBleHRlbmRzIEJhc2VSb3V0ZXJTdG9yZVN0YXRlID0gU2VyaWFsaXplZFJvdXRlclN0YXRlU25hcHNob3Rcbj4gPSB7XG4gIHR5cGU6IHR5cGVvZiBST1VURVJfRVJST1I7XG4gIHBheWxvYWQ6IFJvdXRlckVycm9yUGF5bG9hZDxULCBWPjtcbn07XG5cbi8qKlxuICogQW4gYWN0aW9uIGRpc3BhdGNoZWQgYWZ0ZXIgbmF2aWdhdGlvbiBoYXMgZW5kZWQgYW5kIG5ldyByb3V0ZSBpcyBhY3RpdmUuXG4gKi9cbmV4cG9ydCBjb25zdCBST1VURVJfTkFWSUdBVEVEID0gJ0BuZ3J4L3JvdXRlci1zdG9yZS9uYXZpZ2F0ZWQnO1xuXG4vKipcbiAqIFBheWxvYWQgb2YgUk9VVEVSX05BVklHQVRFRC5cbiAqL1xuZXhwb3J0IHR5cGUgUm91dGVyTmF2aWdhdGVkUGF5bG9hZCA9IHtcbiAgZXZlbnQ6IE5hdmlnYXRpb25FbmQ7XG59O1xuXG4vKipcbiAqIEFuIGFjdGlvbiBkaXNwYXRjaGVkIGFmdGVyIG5hdmlnYXRpb24gaGFzIGVuZGVkIGFuZCBuZXcgcm91dGUgaXMgYWN0aXZlLlxuICovXG5leHBvcnQgdHlwZSBSb3V0ZXJOYXZpZ2F0ZWRBY3Rpb24gPSB7XG4gIHR5cGU6IHR5cGVvZiBST1VURVJfTkFWSUdBVEVEO1xuICBwYXlsb2FkOiBSb3V0ZXJOYXZpZ2F0ZWRQYXlsb2FkO1xufTtcblxuLyoqXG4gKiBBIHVuaW9uIHR5cGUgb2Ygcm91dGVyIGFjdGlvbnMuXG4gKi9cbmV4cG9ydCB0eXBlIFJvdXRlckFjdGlvbjxcbiAgVCxcbiAgViBleHRlbmRzIEJhc2VSb3V0ZXJTdG9yZVN0YXRlID0gU2VyaWFsaXplZFJvdXRlclN0YXRlU25hcHNob3Rcbj4gPVxuICB8IFJvdXRlclJlcXVlc3RBY3Rpb25cbiAgfCBSb3V0ZXJOYXZpZ2F0aW9uQWN0aW9uPFY+XG4gIHwgUm91dGVyQ2FuY2VsQWN0aW9uPFQsIFY+XG4gIHwgUm91dGVyRXJyb3JBY3Rpb248VCwgVj5cbiAgfCBSb3V0ZXJOYXZpZ2F0ZWRBY3Rpb247XG4iXX0=